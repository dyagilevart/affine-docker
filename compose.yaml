services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable
    container_name: affine_selfhosted
    command:
      ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']
    ports:
      - '3010:3010'
      - '5555:5555'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # custom configurations
      - ~/umbrel/affine/self-host/config:/root/.affine/config
      # blob storage
      - ~/umbrel/affine/self-host/storage:/root/.affine/storage
    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    restart: unless-stopped
    environment:
      - NODE_OPTIONS="--import=./scripts/register.js"
      - AFFINE_CONFIG_PATH=/root/.affine/config
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgres://affine:affine@postgres:5432/affine
      - NODE_ENV=production
      # Telemetry allows us to collect data on how you use the affine. This data will helps us improve the app and provide better features.
      # Uncomment next line if you wish to quit telemetry.
      # - TELEMETRY_ENABLE=false
  redis:
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    volumes:
      - ~/umbrel/affine/self-host/redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:16
    container_name: affine_postgres
    restart: unless-stopped
    volumes:
      - ~/umbrel/affine/self-host/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U affine']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: affine
      POSTGRES_PASSWORD: affine
      POSTGRES_DB: affine
      PGDATA: /var/lib/postgresql/data/pgdata
  adminer:
    image: adminer
    container_name: affine_adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - 3011:8080
  backup_bot:
    build: https://github.com/Radim296/pg-backup-bot.git
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=affine
      - POSTGRES_USER=affine
      - POSTGRES_PASSWORD=affine
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CHAT_ID=154917313
      - TELEGRAM_TOKEN=7705866863:AAHqrVp2Bj2_9LVKxRrCvTLdZls8VnvVlIo

      # configuring the time (you can set one of the following options)
      # - TIME_TO_SEND=21:00 # hour:minute in 24h format
      - INTERVAL=2 # minutes
